plugins {
	id 'org.springframework.boot' version '2.7.6'
//	id 'org.springdoc.openapi-gradle-plugin' version "1.4.0"
	id 'com.diffplug.spotless' version '6.11.0'
	id "org.sonarqube" version "3.5.0.2730"
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id 'java'
}

apply plugin: 'org.sonarqube'


sonarqube {
	properties {
		property 'sonar.projectKey', 'Econovation-IDP-Backend'
		property 'sonar.organization', 'econovation'
		property 'sonar.host.url', 'https://sonarcloud.io'
		property 'sonar.sources', 'src'
		property 'sonar.language', 'java'
		property 'sonar.sourceEncoding', 'UTF-8'
		property 'sonar.test.inclusions', '**/*Test.java'
		property 'sonar.exclusions', '**/test/**, **/Q*.java, **/*Doc*.java, **/resources/** ,**/*Application*.java , **/*Config*.java,' +
				'**/*Dto*.java, **/*Request*.java, **/*Response*.java ,**/*Exception*.java ,**/*ErrorCode*.java'
		property 'sonar.java.coveragePlugin', 'jacoco'
	}
}


group = 'com.econovation.idp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

jacoco {
	toolVersion = "0.8.7"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

repositories {
	mavenCentral()
}
dependencies {
//	jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
// apache commons io
	implementation group: 'commons-io', name: 'commons-io', version: '2.6'
//	Redis Dependencies - Login, Logout 기능구현
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

//	Swagger
//	implementation 'org.springdoc:springdoc-openapi-security:1.6.11'
//	implementation 'org.springdoc:springdoc-openapi-common:1.6.9'
//	implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.9'
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.14'

//	Spring Security
	implementation 'org.springframework.boot:spring-boot-starter-security'

//	Mail Service
	implementation 'org.springframework.boot:spring-boot-starter-mail'
//  spring data jpa
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	// Spring actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	runtimeOnly 'mysql:mysql-connector-java'

	compileOnly 'org.projectlombok:lombok'
	//	runtimeOnly 'com.h2database:h2:2.1.214'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

	jar { enabled = false }

}

tasks.named('test') {
	useJUnitPlatform()
}

spotless {
	java {
		target("**/*.java")
		googleJavaFormat().aosp()
		importOrder()
		removeUnusedImports()
		trimTrailingWhitespace()
		endWithNewline()
	}
}